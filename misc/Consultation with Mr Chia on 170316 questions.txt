-	preference of UI design
	multiple columns of different headings, or same headings

-	format of the storage file
	commandline format, or xml? if xml, should empty fields be omitted or included so that user can add in
	
-	merging of logic and parser
	if not merge, a lot redundant code (getters in parser)
	logic high coupling on parser (eg. logic want to add additional command, have to edit parser)
	
-	Bundling of logic return values into a single CommandDetails class
	commandType = logic.executeCommand(); 
	feedback = logic.getFeedback(); 
	if (commandType == Command.FIND) 
		indexesFound = logic.getIndexes();
	
-	Create instance variable or keep it local and pass as arguments to other methods? eg. _argument	
	
-	is undo once sufficient? need to implement redo?
	undo find commmand, what happens?
	
-	design of undo -- just keep previous tasklist?
	
-	how should find command be displayed? will executing another command exit the 'find mode'?

-	if not doing GUI bucket, will implementing GUI-based functionalities complicate the user interface for a non-GUI user
	hence marks get deducted?

-	using FXML for UI creation

-	date, startTime, endTime: bundle into 1 class?

-	Observer how to implement? UI object?

-	Will we know our grading for V0.5? will feedback be given?

- 	Exceptions, one big try catch or multiple try catch?
